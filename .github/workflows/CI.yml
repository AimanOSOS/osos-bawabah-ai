
on:
  pull_request:
    branches: [ dev, main ]
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches: [ dev, main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  format:
    name: Format (pre-commit)
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout (full history for diff)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction

      - name: Run ruff format check
        run: poetry run ruff format --check .

  lint:
    name: Lint (ruff check)
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout (full history for diff)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction

      - name: Determine changed Python files
        id: changed
        uses: tj-actions/changed-files@v44
        with:
          files: |
            **/*.py
          separator: " "

      - name: Ruff Lint (changed files)
        if: steps.changed.outputs.all_changed_files != ''
        run: poetry run ruff check ${{ steps.changed.outputs.all_changed_files }}

      - name: Ruff Lint (skip)
        if: steps.changed.outputs.all_changed_files == ''
        run: echo "Skipping ruff; no Python changes in PR."